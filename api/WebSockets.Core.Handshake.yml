### YamlMime:ManagedReference
items:
- uid: WebSockets.Core.Handshake
  commentId: T:WebSockets.Core.Handshake
  id: Handshake
  parent: WebSockets.Core
  children:
  - WebSockets.Core.Handshake.#ctor(System.Boolean,System.String[],WebSockets.Core.IDateTimeProvider)
  - WebSockets.Core.Handshake.ReadData(System.Byte[],System.Int64@,System.Int64)
  - WebSockets.Core.Handshake.SelectedSubProtocol
  - WebSockets.Core.Handshake.State
  - WebSockets.Core.Handshake.WriteData(System.Byte[],System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: Handshake
  nameWithType: Handshake
  fullName: WebSockets.Core.Handshake
  type: Class
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Handshake
    path: src/WebSockets.Core/Handshake.cs
    startLine: 10
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: >-
    The base protocol class providing functionality shared by both clients

    and servers.
  example: []
  syntax:
    content: public abstract class Handshake
    content.vb: Public MustInherit Class Handshake
  inheritance:
  - System.Object
  derivedClasses:
  - WebSockets.Core.ClientHandshake
  - WebSockets.Core.ServerHandshake
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: WebSockets.Core.Handshake.#ctor(System.Boolean,System.String[],WebSockets.Core.IDateTimeProvider)
  commentId: M:WebSockets.Core.Handshake.#ctor(System.Boolean,System.String[],WebSockets.Core.IDateTimeProvider)
  id: '#ctor(System.Boolean,System.String[],WebSockets.Core.IDateTimeProvider)'
  parent: WebSockets.Core.Handshake
  langs:
  - csharp
  - vb
  name: Handshake(bool, string[], IDateTimeProvider)
  nameWithType: Handshake.Handshake(bool, string[], IDateTimeProvider)
  fullName: WebSockets.Core.Handshake.Handshake(bool, string[], WebSockets.Core.IDateTimeProvider)
  type: Constructor
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: .ctor
    path: src/WebSockets.Core/Handshake.cs
    startLine: 25
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: Construct the protocol.
  example: []
  syntax:
    content: protected Handshake(bool isClient, string[] subProtocols, IDateTimeProvider dateTimeProvider)
    parameters:
    - id: isClient
      type: System.Boolean
      description: If true the protocol is for a client; otherwise it is for a server.
    - id: subProtocols
      type: System.String[]
      description: The supported sub-protocols.
    - id: dateTimeProvider
      type: WebSockets.Core.IDateTimeProvider
      description: A date/time provider.
    content.vb: Protected Sub New(isClient As Boolean, subProtocols As String(), dateTimeProvider As IDateTimeProvider)
  overload: WebSockets.Core.Handshake.#ctor*
  nameWithType.vb: Handshake.New(Boolean, String(), IDateTimeProvider)
  fullName.vb: WebSockets.Core.Handshake.New(Boolean, String(), WebSockets.Core.IDateTimeProvider)
  name.vb: New(Boolean, String(), IDateTimeProvider)
- uid: WebSockets.Core.Handshake.State
  commentId: P:WebSockets.Core.Handshake.State
  id: State
  parent: WebSockets.Core.Handshake
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Handshake.State
  fullName: WebSockets.Core.Handshake.State
  type: Property
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: State
    path: src/WebSockets.Core/Handshake.cs
    startLine: 38
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: The state of the connection.
  example: []
  syntax:
    content: public HandshakeState State { get; protected set; }
    parameters: []
    return:
      type: WebSockets.Core.HandshakeState
      description: The connection state.
    content.vb: Public Property State As HandshakeState
  overload: WebSockets.Core.Handshake.State*
- uid: WebSockets.Core.Handshake.SelectedSubProtocol
  commentId: P:WebSockets.Core.Handshake.SelectedSubProtocol
  id: SelectedSubProtocol
  parent: WebSockets.Core.Handshake
  langs:
  - csharp
  - vb
  name: SelectedSubProtocol
  nameWithType: Handshake.SelectedSubProtocol
  fullName: WebSockets.Core.Handshake.SelectedSubProtocol
  type: Property
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: SelectedSubProtocol
    path: src/WebSockets.Core/Handshake.cs
    startLine: 44
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: The sub-protocol negotiated during the handshake.
  example: []
  syntax:
    content: public string? SelectedSubProtocol { get; protected set; }
    parameters: []
    return:
      type: System.String
      description: The (possibly null) selected sub-protocol.
    content.vb: Public Property SelectedSubProtocol As String
  overload: WebSockets.Core.Handshake.SelectedSubProtocol*
- uid: WebSockets.Core.Handshake.ReadData(System.Byte[],System.Int64@,System.Int64)
  commentId: M:WebSockets.Core.Handshake.ReadData(System.Byte[],System.Int64@,System.Int64)
  id: ReadData(System.Byte[],System.Int64@,System.Int64)
  parent: WebSockets.Core.Handshake
  langs:
  - csharp
  - vb
  name: ReadData(byte[], ref long, long)
  nameWithType: Handshake.ReadData(byte[], ref long, long)
  fullName: WebSockets.Core.Handshake.ReadData(byte[], ref long, long)
  type: Method
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: ReadData
    path: src/WebSockets.Core/Handshake.cs
    startLine: 52
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: Read handshake data from the provided array into the handshake buffer.
  example: []
  syntax:
    content: public void ReadData(byte[] source, ref long offset, long length)
    parameters:
    - id: source
      type: System.Byte[]
      description: The buffer containing the data.
    - id: offset
      type: System.Int64
      description: The offset into the buffer.
    - id: length
      type: System.Int64
      description: The length of the data.
    content.vb: Public Sub ReadData(source As Byte(), offset As Long, length As Long)
  overload: WebSockets.Core.Handshake.ReadData*
  nameWithType.vb: Handshake.ReadData(Byte(), Long, Long)
  fullName.vb: WebSockets.Core.Handshake.ReadData(Byte(), Long, Long)
  name.vb: ReadData(Byte(), Long, Long)
- uid: WebSockets.Core.Handshake.WriteData(System.Byte[],System.Int64,System.Int64)
  commentId: M:WebSockets.Core.Handshake.WriteData(System.Byte[],System.Int64,System.Int64)
  id: WriteData(System.Byte[],System.Int64,System.Int64)
  parent: WebSockets.Core.Handshake
  langs:
  - csharp
  - vb
  name: WriteData(byte[], long, long)
  nameWithType: Handshake.WriteData(byte[], long, long)
  fullName: WebSockets.Core.Handshake.WriteData(byte[], long, long)
  type: Method
  source:
    remote:
      path: src/WebSockets.Core/Handshake.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: WriteData
    path: src/WebSockets.Core/Handshake.cs
    startLine: 65
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core
  summary: Write data from the handshake buffer into the provided array.
  example: []
  syntax:
    content: public void WriteData(byte[] destination, long offset, long length)
    parameters:
    - id: destination
      type: System.Byte[]
      description: The array to receive the data.
    - id: offset
      type: System.Int64
      description: The point in the buffer to start writing the data.
    - id: length
      type: System.Int64
      description: The length of the buffer.
    content.vb: Public Sub WriteData(destination As Byte(), offset As Long, length As Long)
  overload: WebSockets.Core.Handshake.WriteData*
  nameWithType.vb: Handshake.WriteData(Byte(), Long, Long)
  fullName.vb: WebSockets.Core.Handshake.WriteData(Byte(), Long, Long)
  name.vb: WriteData(Byte(), Long, Long)
references:
- uid: WebSockets.Core
  commentId: N:WebSockets.Core
  href: WebSockets.html
  name: WebSockets.Core
  nameWithType: WebSockets.Core
  fullName: WebSockets.Core
  spec.csharp:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
  spec.vb:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: WebSockets.Core.Handshake.#ctor*
  commentId: Overload:WebSockets.Core.Handshake.#ctor
  href: WebSockets.Core.Handshake.html#WebSockets_Core_Handshake__ctor_System_Boolean_System_String___WebSockets_Core_IDateTimeProvider_
  name: Handshake
  nameWithType: Handshake.Handshake
  fullName: WebSockets.Core.Handshake.Handshake
  nameWithType.vb: Handshake.New
  fullName.vb: WebSockets.Core.Handshake.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: WebSockets.Core.IDateTimeProvider
  commentId: T:WebSockets.Core.IDateTimeProvider
  parent: WebSockets.Core
  href: WebSockets.Core.IDateTimeProvider.html
  name: IDateTimeProvider
  nameWithType: IDateTimeProvider
  fullName: WebSockets.Core.IDateTimeProvider
- uid: WebSockets.Core.Handshake.State*
  commentId: Overload:WebSockets.Core.Handshake.State
  href: WebSockets.Core.Handshake.html#WebSockets_Core_Handshake_State
  name: State
  nameWithType: Handshake.State
  fullName: WebSockets.Core.Handshake.State
- uid: WebSockets.Core.HandshakeState
  commentId: T:WebSockets.Core.HandshakeState
  parent: WebSockets.Core
  href: WebSockets.Core.HandshakeState.html
  name: HandshakeState
  nameWithType: HandshakeState
  fullName: WebSockets.Core.HandshakeState
- uid: WebSockets.Core.Handshake.SelectedSubProtocol*
  commentId: Overload:WebSockets.Core.Handshake.SelectedSubProtocol
  href: WebSockets.Core.Handshake.html#WebSockets_Core_Handshake_SelectedSubProtocol
  name: SelectedSubProtocol
  nameWithType: Handshake.SelectedSubProtocol
  fullName: WebSockets.Core.Handshake.SelectedSubProtocol
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: WebSockets.Core.Handshake.ReadData*
  commentId: Overload:WebSockets.Core.Handshake.ReadData
  href: WebSockets.Core.Handshake.html#WebSockets_Core_Handshake_ReadData_System_Byte___System_Int64__System_Int64_
  name: ReadData
  nameWithType: Handshake.ReadData
  fullName: WebSockets.Core.Handshake.ReadData
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: WebSockets.Core.Handshake.WriteData*
  commentId: Overload:WebSockets.Core.Handshake.WriteData
  href: WebSockets.Core.Handshake.html#WebSockets_Core_Handshake_WriteData_System_Byte___System_Int64_System_Int64_
  name: WriteData
  nameWithType: Handshake.WriteData
  fullName: WebSockets.Core.Handshake.WriteData
