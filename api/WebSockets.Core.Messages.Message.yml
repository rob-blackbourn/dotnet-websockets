### YamlMime:ManagedReference
items:
- uid: WebSockets.Core.Messages.Message
  commentId: T:WebSockets.Core.Messages.Message
  id: Message
  parent: WebSockets.Core.Messages
  children:
  - WebSockets.Core.Messages.Message.#ctor(WebSockets.Core.Messages.MessageType)
  - WebSockets.Core.Messages.Message.Deserialize(System.Byte[])
  - WebSockets.Core.Messages.Message.Equals(WebSockets.Core.Messages.Message)
  - WebSockets.Core.Messages.Message.Serialize(System.Boolean,System.Nullable{WebSockets.Core.Reserved},System.Int64,WebSockets.Core.INonceGenerator)
  - WebSockets.Core.Messages.Message.Type
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Message
  fullName: WebSockets.Core.Messages.Message
  type: Class
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Message
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 8
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: The base class for all WebSocket messages.
  example: []
  syntax:
    content: 'public abstract class Message : IEquatable<Message>'
    content.vb: Public MustInherit Class Message Implements IEquatable(Of Message)
  inheritance:
  - System.Object
  derivedClasses:
  - WebSockets.Core.Messages.CloseMessage
  - WebSockets.Core.Messages.DataMessage
  - WebSockets.Core.Messages.TextMessage
  implements:
  - System.IEquatable{WebSockets.Core.Messages.Message}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: WebSockets.Core.Messages.Message.#ctor(WebSockets.Core.Messages.MessageType)
  commentId: M:WebSockets.Core.Messages.Message.#ctor(WebSockets.Core.Messages.MessageType)
  id: '#ctor(WebSockets.Core.Messages.MessageType)'
  parent: WebSockets.Core.Messages.Message
  langs:
  - csharp
  - vb
  name: Message(MessageType)
  nameWithType: Message.Message(MessageType)
  fullName: WebSockets.Core.Messages.Message.Message(WebSockets.Core.Messages.MessageType)
  type: Constructor
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: .ctor
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 14
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: Construct a message.
  example: []
  syntax:
    content: protected Message(MessageType type)
    parameters:
    - id: type
      type: WebSockets.Core.Messages.MessageType
      description: The message type.
    content.vb: Protected Sub New(type As MessageType)
  overload: WebSockets.Core.Messages.Message.#ctor*
  nameWithType.vb: Message.New(MessageType)
  fullName.vb: WebSockets.Core.Messages.Message.New(WebSockets.Core.Messages.MessageType)
  name.vb: New(MessageType)
- uid: WebSockets.Core.Messages.Message.Type
  commentId: P:WebSockets.Core.Messages.Message.Type
  id: Type
  parent: WebSockets.Core.Messages.Message
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Message.Type
  fullName: WebSockets.Core.Messages.Message.Type
  type: Property
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Type
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 23
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: The message type.
  example: []
  syntax:
    content: public MessageType Type { get; }
    parameters: []
    return:
      type: WebSockets.Core.Messages.MessageType
      description: The type of the message.
    content.vb: Public Property Type As MessageType
  overload: WebSockets.Core.Messages.Message.Type*
- uid: WebSockets.Core.Messages.Message.Serialize(System.Boolean,System.Nullable{WebSockets.Core.Reserved},System.Int64,WebSockets.Core.INonceGenerator)
  commentId: M:WebSockets.Core.Messages.Message.Serialize(System.Boolean,System.Nullable{WebSockets.Core.Reserved},System.Int64,WebSockets.Core.INonceGenerator)
  id: Serialize(System.Boolean,System.Nullable{WebSockets.Core.Reserved},System.Int64,WebSockets.Core.INonceGenerator)
  parent: WebSockets.Core.Messages.Message
  langs:
  - csharp
  - vb
  name: Serialize(bool, Reserved?, long, INonceGenerator?)
  nameWithType: Message.Serialize(bool, Reserved?, long, INonceGenerator?)
  fullName: WebSockets.Core.Messages.Message.Serialize(bool, WebSockets.Core.Reserved?, long, WebSockets.Core.INonceGenerator?)
  type: Method
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Serialize
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 33
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: Serialize the message to bytes.
  example: []
  syntax:
    content: public byte[] Serialize(bool isClient, Reserved? reserved = null, long maxFrameSize = 9223372036854775807, INonceGenerator? nonceGenerator = null)
    parameters:
    - id: isClient
      type: System.Boolean
      description: If true this is a client message, otherwise it is a server message.
    - id: reserved
      type: System.Nullable{WebSockets.Core.Reserved}
      description: The reserved bits.
    - id: maxFrameSize
      type: System.Int64
      description: The maximum size of a frame.
    - id: nonceGenerator
      type: WebSockets.Core.INonceGenerator
      description: A generator for client masks.
    return:
      type: System.Byte[]
      description: The message, serialized to bytes.
    content.vb: Public Function Serialize(isClient As Boolean, reserved As Reserved? = Nothing, maxFrameSize As Long = 9223372036854775807, nonceGenerator As INonceGenerator = Nothing) As Byte()
  overload: WebSockets.Core.Messages.Message.Serialize*
  nameWithType.vb: Message.Serialize(Boolean, Reserved?, Long, INonceGenerator)
  fullName.vb: WebSockets.Core.Messages.Message.Serialize(Boolean, WebSockets.Core.Reserved?, Long, WebSockets.Core.INonceGenerator)
  name.vb: Serialize(Boolean, Reserved?, Long, INonceGenerator)
- uid: WebSockets.Core.Messages.Message.Deserialize(System.Byte[])
  commentId: M:WebSockets.Core.Messages.Message.Deserialize(System.Byte[])
  id: Deserialize(System.Byte[])
  parent: WebSockets.Core.Messages.Message
  langs:
  - csharp
  - vb
  name: Deserialize(byte[])
  nameWithType: Message.Deserialize(byte[])
  fullName: WebSockets.Core.Messages.Message.Deserialize(byte[])
  type: Method
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Deserialize
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 53
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: Deserialize data into a message.
  example: []
  syntax:
    content: public static Message Deserialize(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to deserialize.
    return:
      type: WebSockets.Core.Messages.Message
      description: The deserialized message.
    content.vb: Public Shared Function Deserialize(data As Byte()) As Message
  overload: WebSockets.Core.Messages.Message.Deserialize*
  nameWithType.vb: Message.Deserialize(Byte())
  fullName.vb: WebSockets.Core.Messages.Message.Deserialize(Byte())
  name.vb: Deserialize(Byte())
- uid: WebSockets.Core.Messages.Message.Equals(WebSockets.Core.Messages.Message)
  commentId: M:WebSockets.Core.Messages.Message.Equals(WebSockets.Core.Messages.Message)
  id: Equals(WebSockets.Core.Messages.Message)
  parent: WebSockets.Core.Messages.Message
  langs:
  - csharp
  - vb
  name: Equals(Message?)
  nameWithType: Message.Equals(Message?)
  fullName: WebSockets.Core.Messages.Message.Equals(WebSockets.Core.Messages.Message?)
  type: Method
  source:
    remote:
      path: src/WebSockets.Core/Messages/Message.cs
      branch: docs
      repo: git@github.com:rob-blackbourn/dotnet-websockets.git
    id: Equals
    path: src/WebSockets.Core/Messages/Message.cs
    startLine: 64
  assemblies:
  - WebSockets.Core
  namespace: WebSockets.Core.Messages
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Message? other)
    parameters:
    - id: other
      type: WebSockets.Core.Messages.Message
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Message) As Boolean
  overload: WebSockets.Core.Messages.Message.Equals*
  implements:
  - System.IEquatable{WebSockets.Core.Messages.Message}.Equals(WebSockets.Core.Messages.Message)
  nameWithType.vb: Message.Equals(Message)
  fullName.vb: WebSockets.Core.Messages.Message.Equals(WebSockets.Core.Messages.Message)
  name.vb: Equals(Message)
references:
- uid: WebSockets.Core.Messages
  commentId: N:WebSockets.Core.Messages
  href: WebSockets.html
  name: WebSockets.Core.Messages
  nameWithType: WebSockets.Core.Messages
  fullName: WebSockets.Core.Messages
  spec.csharp:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
  - name: .
  - uid: WebSockets.Core.Messages
    name: Messages
    href: WebSockets.Core.Messages.html
  spec.vb:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
  - name: .
  - uid: WebSockets.Core.Messages
    name: Messages
    href: WebSockets.Core.Messages.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{WebSockets.Core.Messages.Message}
  commentId: T:System.IEquatable{WebSockets.Core.Messages.Message}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Message>
  nameWithType: IEquatable<Message>
  fullName: System.IEquatable<WebSockets.Core.Messages.Message>
  nameWithType.vb: IEquatable(Of Message)
  fullName.vb: System.IEquatable(Of WebSockets.Core.Messages.Message)
  name.vb: IEquatable(Of Message)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: WebSockets.Core.Messages.Message
    name: Message
    href: WebSockets.Core.Messages.Message.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: WebSockets.Core.Messages.Message
    name: Message
    href: WebSockets.Core.Messages.Message.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: WebSockets.Core.Messages.Message.#ctor*
  commentId: Overload:WebSockets.Core.Messages.Message.#ctor
  href: WebSockets.Core.Messages.Message.html#WebSockets_Core_Messages_Message__ctor_WebSockets_Core_Messages_MessageType_
  name: Message
  nameWithType: Message.Message
  fullName: WebSockets.Core.Messages.Message.Message
  nameWithType.vb: Message.New
  fullName.vb: WebSockets.Core.Messages.Message.New
  name.vb: New
- uid: WebSockets.Core.Messages.MessageType
  commentId: T:WebSockets.Core.Messages.MessageType
  parent: WebSockets.Core.Messages
  href: WebSockets.Core.Messages.MessageType.html
  name: MessageType
  nameWithType: MessageType
  fullName: WebSockets.Core.Messages.MessageType
- uid: WebSockets.Core.Messages.Message.Type*
  commentId: Overload:WebSockets.Core.Messages.Message.Type
  href: WebSockets.Core.Messages.Message.html#WebSockets_Core_Messages_Message_Type
  name: Type
  nameWithType: Message.Type
  fullName: WebSockets.Core.Messages.Message.Type
- uid: WebSockets.Core.Messages.Message.Serialize*
  commentId: Overload:WebSockets.Core.Messages.Message.Serialize
  href: WebSockets.Core.Messages.Message.html#WebSockets_Core_Messages_Message_Serialize_System_Boolean_System_Nullable_WebSockets_Core_Reserved__System_Int64_WebSockets_Core_INonceGenerator_
  name: Serialize
  nameWithType: Message.Serialize
  fullName: WebSockets.Core.Messages.Message.Serialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Nullable{WebSockets.Core.Reserved}
  commentId: T:System.Nullable{WebSockets.Core.Reserved}
  parent: System
  definition: System.Nullable`1
  href: WebSockets.Core.Reserved.html
  name: Reserved?
  nameWithType: Reserved?
  fullName: WebSockets.Core.Reserved?
  spec.csharp:
  - uid: WebSockets.Core.Reserved
    name: Reserved
    href: WebSockets.Core.Reserved.html
  - name: '?'
  spec.vb:
  - uid: WebSockets.Core.Reserved
    name: Reserved
    href: WebSockets.Core.Reserved.html
  - name: '?'
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: WebSockets.Core.INonceGenerator
  commentId: T:WebSockets.Core.INonceGenerator
  parent: WebSockets.Core
  href: WebSockets.Core.INonceGenerator.html
  name: INonceGenerator
  nameWithType: INonceGenerator
  fullName: WebSockets.Core.INonceGenerator
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: WebSockets.Core
  commentId: N:WebSockets.Core
  href: WebSockets.html
  name: WebSockets.Core
  nameWithType: WebSockets.Core
  fullName: WebSockets.Core
  spec.csharp:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
  spec.vb:
  - uid: WebSockets
    name: WebSockets
    href: WebSockets.html
  - name: .
  - uid: WebSockets.Core
    name: Core
    href: WebSockets.Core.html
- uid: WebSockets.Core.Messages.Message.Deserialize*
  commentId: Overload:WebSockets.Core.Messages.Message.Deserialize
  href: WebSockets.Core.Messages.Message.html#WebSockets_Core_Messages_Message_Deserialize_System_Byte___
  name: Deserialize
  nameWithType: Message.Deserialize
  fullName: WebSockets.Core.Messages.Message.Deserialize
- uid: WebSockets.Core.Messages.Message
  commentId: T:WebSockets.Core.Messages.Message
  parent: WebSockets.Core.Messages
  href: WebSockets.Core.Messages.Message.html
  name: Message
  nameWithType: Message
  fullName: WebSockets.Core.Messages.Message
- uid: WebSockets.Core.Messages.Message.Equals*
  commentId: Overload:WebSockets.Core.Messages.Message.Equals
  href: WebSockets.Core.Messages.Message.html#WebSockets_Core_Messages_Message_Equals_WebSockets_Core_Messages_Message_
  name: Equals
  nameWithType: Message.Equals
  fullName: WebSockets.Core.Messages.Message.Equals
- uid: System.IEquatable{WebSockets.Core.Messages.Message}.Equals(WebSockets.Core.Messages.Message)
  commentId: M:System.IEquatable{WebSockets.Core.Messages.Message}.Equals(WebSockets.Core.Messages.Message)
  parent: System.IEquatable{WebSockets.Core.Messages.Message}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Message)
  nameWithType: IEquatable<Message>.Equals(Message)
  fullName: System.IEquatable<WebSockets.Core.Messages.Message>.Equals(WebSockets.Core.Messages.Message)
  nameWithType.vb: IEquatable(Of Message).Equals(Message)
  fullName.vb: System.IEquatable(Of WebSockets.Core.Messages.Message).Equals(WebSockets.Core.Messages.Message)
  spec.csharp:
  - uid: System.IEquatable{WebSockets.Core.Messages.Message}.Equals(WebSockets.Core.Messages.Message)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: WebSockets.Core.Messages.Message
    name: Message
    href: WebSockets.Core.Messages.Message.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{WebSockets.Core.Messages.Message}.Equals(WebSockets.Core.Messages.Message)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: WebSockets.Core.Messages.Message
    name: Message
    href: WebSockets.Core.Messages.Message.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
